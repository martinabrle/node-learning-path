name: Node.js Package

on:
  workflow_dispatch

defaults:
  run:
    working-directory: ./express-postgresql-app
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: test
        run: |
          pwd |
          ls -la
        
      - name: Validate deployment template
        run: az bicep build --file ./scripts/deployment-uat.bicep
        
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com
          
      - name: Restore project dependencies
        run: npm install
      
      - name: Generate unique package version
        run: |
          declare origPackageVersion=""
          declare packageVersion=""
          cat ./package.json
          origPackageVersion=$(cat ./package.json | jq '.version')
          origPackageVersion="${origPackageVersion%\"}"
          origPackageVersion="${origPackageVersion#\"}"
          packageVersion="${origPackageVersion}.${{github.sha}}"
          echo "New package version: $packageVersion"
          echo "transformation test"
          cat ./package.json | jq ". |= . + { \"version\": \"${packageVersion}\" }"
          cat ./package.json | jq ". |= . + { \"version\": \"${packageVersion}\" }" > ./package2.json
          echo "new package"
          cat ./package2.json
          echo '::set-output packageVersion="$(packageVersion)"'
          
      - name: Build and validate
        run: npm run build
      
      - name: Run unit tests
        run: npm run test
      
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
      
      #- name: Azure login
       # uses: azure/login@v1
       # with:
       #   client-id: ${{ secrets.AZURE_UAT_CLIENT_ID }}
       #   tenant-id: ${{ secrets.AZURE_UAT_TENANT_ID }}
       #   subscription-id: ${{ secrets.AZURE_UAT_SUBSCRIPTION_ID }}
