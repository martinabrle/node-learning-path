name: Node.js Package

on:
  workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./express-postgresql-app
    steps:
      - uses: actions/checkout@v2
      
      - name: Validate deployment template(s)
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az bicep build --file "{{$env.working-directory}}/scripts/deployment-uat.bicep"
        
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com
          
      - name: Restore project dependencies
        run: npm install
        working-directory: "{{$env.working-directory}}"
      
      - name: Generate unique package version
        run: |
          origPackageVersion=$(cat ./package.json | jq '.version') |
          origPackageVersion="${origPackageVersion%\"}" |
          origPackageVersion="${origPackageVersion#\"}" |
          packageVersion="${origPackageVersion}.${{github.sha}}" |
          cat ./package.json | jq ". |= . + { \"version\": \"${packageVersion}\" }">package.json |
          run: echo '::set-output packageVersion="$(packageVersion)"'
        working-directory: "{{$env.working-directory}}"
          
      - name: Build and validate
        run: npm run build
        working-directory: "{{$env.working-directory}}"
      
      - name: Run unit tests
        run: npm run test
        working-directory: "{{$env.working-directory}}"
      
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        working-directory: "{{$env.working-directory}}"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
      
      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_UAT_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_UAT_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_UAT_SUBSCRIPTION_ID }}
